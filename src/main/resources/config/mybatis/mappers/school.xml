<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fmc.edu.school">
    <sql id="limit-split-page">
        limit #{start}, #{size}
    </sql>
    <select id="querySchoolCount" parameterType="map" resultType="int">
        SELECT count(id)
        FROM school
        <where>
            `city_id` = #{cityId}
            <if test="key != null">
                and `name` LIKE CONCAT('%', #{key})
            </if>
        </where>

    </select>

    <select id="querySchoolPage" parameterType="map" resultType="map">
        SELECT id as schoolId, `name` as schoolName
        FROM school
        <where>
            `city_id` = #{cityId}
            <if test="key != null">
                and `name` LIKE CONCAT('%', #{key})
            </if>
        </where>

        <include refid="limit-split-page"/>
    </select>

    <select id="queryClassCount" parameterType="map" resultType="int">
        SELECT count(id)
        FROM class
        <where>
            `school_id` = #{schoolId}
            <if test="key != null">
                and (`grade` LIKE CONCAT('%', #{key}) or `class` LIKE CONCAT('%', #{key}))
            </if>
        </where>

    </select>

    <select id="queryClassPage" parameterType="map" resultType="map">
        SELECT id as classId, grade,class
        FROM class
        <where>
            `school_id` = #{schoolId}
            <if test="key != null">
                and (`grade` LIKE CONCAT('%', #{key}) or `class` LIKE CONCAT('%', #{key}))
            </if>
        </where>
        <include refid="limit-split-page"/>
    </select>

    <select id="queryHeadmaster" parameterType="map" resultType="map">
        select p.id as headTeacherId, p.name as headTeacherName
        from class cls
        left join teacher_class_map tcm
        on tcm.teacher_id = cls.head_teacher_id
        left join profile p
        on p.id = tcm.teacher_id
        where cls.id=#{classId};
    </select>

    <insert id="initialStudent" useGeneratedKeys="true" keyProperty="id"
            parameterType="Student" flushCache="true">
        INSERT INTO student (name, class_id, sex, birth, ring_number, ring_phone, creation_date, last_update_date)
        VALUES (#{name}, #{classId}, #{male}, #{birth}, #{ringNumber}, #{ringPhone}, #{creationDate},
        #{lastUpdateDate})
    </insert>

    <select id="queryStudentIdByFields" parameterType="Student" resultType="int">
        SELECT id
        FROM student
        WHERE NAME = #{name} AND class_id = #{classId}
    </select>

    <update id="updateStudentById" parameterType="Student" flushCache="true">
        UPDATE student
        SET name = #{name}, class_id = #{classId}, sex = #{male}, birth = #{birth}, ring_number = #{ringNumber},
        ring_phone = #{ringPhone}, last_update_date = #{lastUpdateDate}
        WHERE id = #{id}
    </update>

    <select id="queryTeacherById" parameterType="int" resultMap="rm.teacher">
        SELECT id, `name`, phone, app_id, channel_id, creation_date, last_login_date, last_update_date, available, concat(profile_type,
        '') as profile_type,
        school_id, sex, head_teacher, initialized, resume, course, birth
        FROM profile
        LEFT JOIN teacher ON id = profile_id
        WHERE id = #{id}
    </select>

    <select id="queryCourseListByClassId" parameterType="map" resultMap="rm.course">
        SELECT cs.id,
        cs.timetable_id,
        cs.course_name,
        cs.`order`,
        cs.order_name,
        cs.start_time,
        cs.end_time,
        cs.week,
        cs.available,
        cs.last_update_date
        FROM course cs
        INNER JOIN timetable tt
        ON cs.timetable_id = tt.id
        WHERE tt.class_id = #{classId} and tt.available = 1 AND cs.week = #{week};

    </select>

    <insert id="insertTimeTable" flushCache="true" parameterType="TimeTable" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO timetable (class_id, available, creation_date, last_update_date)
        VALUES ( #{classId}, 1, now(), now());
    </insert>

    <insert id="insertCourse" flushCache="true" parameterType="Course" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO course
        (timetable_id,course_name,`order`,order_name,start_time,end_time,week,available,last_update_date)
        VALUES(#{timeTableId},#{courseName},#{order},#{orderName},#{startTime},#{endTime},#{week},1,now());
    </insert>

    <update id="updateCourse" flushCache="true" parameterType="Course">
        UPDATE course
        SET timetable_id = #{timeTableId},
        course_name = #{courseName},
        `order` = #{order},
        order_name = #{orderName},
        start_time = #{startTime},
        end_time = #{endTime},
        week = #{week}
        WHERE id = #{id}
    </update>
</mapper>